name: Deploy Serverless OpenHack API Function App

# build only on push to main if the api or any files in the api folders have been modified
# to test, simply add a temptesting branch, then create a subbranch off temptesting, 
#   then make changes in the subfolder on the subbranch, and create a PR against temptesting

on:
  pull_request:
    branches: [temptesting]
    paths:
    - 'resources/SupportingFiles/ExistingFunctions/ServerlessOpenHackAPI/*'
  push:
    branches: [ main ]
    paths:
    - 'resources/SupportingFiles/ExistingFunctions/ServerlessOpenHackAPI/*'

env:
  AZURE_FUNCTIONAPP_NAME: serverlessohapi  # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './resources/SupportingFiles/ExistingFunctions/ServerlessOpenHackAPI/ServerlessOpenHackAPI'    # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1.410'              # set this to the dotnet version to use

jobs:
  build-and-deploy:
    runs-on: windows-latest
    environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: pwsh
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ secrets.SERVERLESSOPENHACKAPI_AZURE_PUBLISH_PROFILE }}
